buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.1'
        classpath 'com.google.dagger:hilt-android-gradle-plugin:2.29-alpha'
    }
}

plugins {
    id 'com.google.protobuf' version '0.8.13' apply false
    id 'org.gradle.android.cache-fix' version '1.0.11' apply false
    id 'org.jetbrains.kotlin.android' version '1.4.10' apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.4.10' apply false
    id 'org.sonarqube' version '3.0'
}

sonarqube {
    properties {
        property 'sonar.android.lint.report', 'build/reports/lint-results.xml'
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
}

def setupAndroidPlugin = { isCi, project ->
    project.android {
        compileSdkVersion 29
        buildToolsVersion '30.0.2'

        defaultConfig {
            minSdkVersion 24
            targetSdkVersion 29
        }

        dexOptions {
            preDexLibraries = !isCi
        }

        compileOptions {
            coreLibraryDesugaringEnabled true
            targetCompatibility = JavaVersion.VERSION_1_8
            sourceCompatibility = JavaVersion.VERSION_1_8
        }
    }

    project.dependencies {
        coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'
    }
}.curry(System.getenv('CI') == 'true')

def setupKotlinAndroidPlugin = { project ->
    project.android {
        sourceSets {
            androidTest.java.srcDirs += 'src/androidTest/kotlin'
            debug.java.srcDirs += 'src/debug/kotlin'
            main.java.srcDirs += 'src/main/kotlin'
            test.java.srcDirs += 'src/test/kotlin'
            testDebug.java.srcDirs += 'src/testDebug/kotlin'
        }

        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }
}

subprojects {
    project.plugins.whenPluginAdded {
        switch (it.class.name) {
            case 'com.android.build.gradle.AppPlugin':
            case 'com.android.build.gradle.LibraryPlugin':
                setupAndroidPlugin(project)
                break
            case 'org.jetbrains.kotlin.gradle.plugin.KotlinAndroidPluginWrapper':
                setupKotlinAndroidPlugin(project)
                break
            default:
                break
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
