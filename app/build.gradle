apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'net.ltgt.errorprone'

def providerAuthority = app_id

android {
    compileSdkVersion Version.manifest.compileSdk
    buildToolsVersion Version.manifest.buildTools

    defaultConfig {
        applicationId app_id
        minSdkVersion Version.manifest.minSdk
        targetSdkVersion Version.manifest.targetSdk
        versionCode version_code.toInteger()
        versionName version_name

        manifestPlaceholders = [
                providerAuthority: providerAuthority
        ]

        buildConfigField 'String', 'PROVIDER_AUTHORITY', "\"$providerAuthority\""
    }

    buildTypes {
        release {
            minifyEnabled true
            useProguard true
            shrinkResources true
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        density {
            enable true
            reset()
            include 'xhdpi'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    implementation project(':library')
    implementation Depend.support.leanback
    implementation Depend.support.compatV7

    // for Orma
    implementation Depend.support.annotations
    implementation Depend.support.compat

    implementation Depend.glide.glide
    implementation Depend.glide.okhttp3
    implementation Depend.dagger.dagger
    annotationProcessor Depend.dagger.compiler
    implementation Depend.rx.java
    implementation Depend.rx.android
    implementation Depend.orma.orma
    annotationProcessor Depend.orma.compiler
    debugImplementation Depend.leakcanary.debug
    releaseImplementation Depend.leakcanary.release
    testImplementation Depend.leakcanary.test
    errorprone Depend.errorprone
}
